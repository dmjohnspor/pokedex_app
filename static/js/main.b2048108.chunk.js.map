{"version":3,"sources":["utils.js","components/Pokedex.js","components/Pokemon.js","components/pokedex.jpg","components/Intro.js","App.js","reportWebVitals.js","index.js"],"names":["toFirstCharUppercase","name","charAt","toUpperCase","slice","useStyles","makeStyles","theme","pokedexContainer","paddingTop","paddingLeft","paddingRight","cardMedia","margin","cardContent","textAlign","searchContainer","display","background","fade","palette","common","white","marginTop","marginBottom","searchIcon","alignSelf","searchInput","width","button","color","Pokedex","props","history","classes","useState","pokemonData","setPokemonData","filter","setFilter","useEffect","axios","get","then","response","console","log","results","data","newPokemonData","forEach","pokemon","index","id","sprite","AppBar","position","Toolbar","Grid","container","direction","justify","alignItems","spacing","item","className","TextField","label","variant","onChange","e","target","value","Button","onClick","push","Object","keys","map","pokemonId","includes","xs","sm","Card","CardMedia","image","style","height","CardContent","Typography","getPokemonCard","CircularProgress","Pokemon","match","params","undefined","setPokemon","catch","error","weight","types","sprites","fullImageUrl","front_default","src","typeInfo","type","generatePokemonJSX","card","padding","backgroundImage","Image","title","Intro","Container","raised","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2048108.chunk.js","sourcesContent":["export const toFirstCharUppercase = name =>\n    name.charAt(0).toUpperCase() + name.slice(1);","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n    AppBar,\n    Toolbar,\n    Grid,\n    Card,\n    CardMedia,\n    CardContent,\n    CircularProgress,\n    Typography,\n    TextField,\n    Button\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport { toFirstCharUppercase } from '../utils';\n\nconst useStyles = makeStyles(theme => ({\n    pokedexContainer: {\n        paddingTop: '20px',\n        paddingLeft: '50px',\n        paddingRight: '50px'\n    },\n    cardMedia: {\n        margin: 'auto',\n    },\n    cardContent: {\n        textAlign: 'center',\n    },\n    searchContainer: {\n        display: 'flex',\n        background: fade(theme.palette.common.white, 0.15),\n        paddingLeft: '20px',\n        paddingRight: '20px',\n        marginTop: '5px',\n        marginBottom: '5px'\n    },\n    searchIcon: {\n        alignSelf: 'flex-end',\n        marginBottom: '5px',\n    },\n    searchInput: {\n        width: '200px',\n        margin: '5px',\n    },\n    button: {\n        background: 'red',\n        color: 'white'\n    }\n}));\n\nconst Pokedex = (props) => {\n    const { history } = props;\n    const classes = useStyles();\n    const [pokemonData, setPokemonData] = useState({});\n    const [filter, setFilter] = useState('');\n\n    const handleSearchChange = (e) => {\n        setFilter(e.target.value);\n    };\n\n    useEffect(() => {\n        axios\n            .get(`https://pokeapi.co/api/v2/pokemon?limit=898`)\n            .then(function (response) {\n                console.log(response)\n                const { data } = response;\n                const { results } = data;\n                const newPokemonData = {};\n                results.forEach((pokemon, index) => {\n                    newPokemonData[index + 1] = {\n                        id: index + 1,\n                        name: pokemon.name,\n                        sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`\n                    };\n                });\n                setPokemonData(newPokemonData);\n            });\n    }, []);\n\n    const getPokemonCard = (pokemonId) => {\n        const { id, name, sprite } = pokemonData[pokemonId];\n\n        return (\n            <Grid item xs={12} sm={4} key={pokemonId}>\n                <Card onClick={() => history.push(`/${pokemonId}`)}>\n                    <CardMedia\n                        className={classes.cardMedia}\n                        image={sprite}\n                        style={{ width: '130px', height: '130px' }}\n                    />\n                    <CardContent className={classes.cardContent}>\n                        <Typography>\n                            {`${id}. ${toFirstCharUppercase(name)}`}\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </Grid>\n        );\n    };\n\n    return (\n        <>\n            <AppBar position='static'>\n                <Toolbar>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={3}>\n                        <Grid item>\n                            <div className={classes.searchContainer}>\n                                <SearchIcon className={classes.searchIcon} />\n                                <TextField\n                                    className={classes.searchInput}\n                                    label='Pokemon'\n                                    variant='standard'\n                                    onChange={handleSearchChange}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                className={classes.button}\n                                variant=\"contained\"\n                                onClick={() => history.push('/')}\n                            >\n                                Back to Pokedex selection\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            {pokemonData ? (\n                <Grid container spacing={2} className={classes.pokedexContainer}>\n                    {Object.keys(pokemonData).map(pokemonId =>\n                        pokemonData[pokemonId].name.includes(filter) &&\n                        getPokemonCard(pokemonId))}\n                </Grid>\n            ) : (<CircularProgress />)}\n        </>\n    );\n};\n\nexport default Pokedex;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Typography, CircularProgress, Button } from '@material-ui/core';\nimport { toFirstCharUppercase } from '../utils';\n\nconst Pokemon = (props) => {\n    const { history, match } = props;\n    const { params } = match;\n    const { pokemonId } = params;\n    const [pokemon, setPokemon] = useState(undefined);\n\n    useEffect(() => {\n        axios\n            .get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}`)\n            .then(function (response) {\n                const { data } = response;\n                setPokemon(data);\n            })\n            .catch(function (error) {\n                setPokemon(false);\n            })\n    }, [pokemonId]);\n\n    const generatePokemonJSX = () => {\n        const { name, id, height, weight, types, sprites } = pokemon\n        const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\n        const { front_default } = sprites\n        return (\n            <>\n                <Typography variant='h1'>\n                    {`${id}`}. {toFirstCharUppercase(name)}\n                    <img src={front_default} />\n                </Typography>\n                <img style={{ width: '300px', height: '300px' }} src={fullImageUrl} />\n                <Typography variant='h3'>Pokemon Info</Typography>\n                <Typography>Height: {height}</Typography>\n                <Typography>Weight: {weight}</Typography>\n                <Typography variant='h6'>Types:</Typography>\n                {types.map(typeInfo => {\n                    const { type } = typeInfo;\n                    const { name } = type;\n                    return <Typography key={name}> {`${name}`}</Typography>\n                })}\n            </>\n        );\n    };\n\n    return (\n        <>\n            {pokemon === undefined && <CircularProgress />}\n            {pokemon !== undefined && pokemon && generatePokemonJSX()}\n            {pokemon === false && <Typography> Pokemon not found </Typography>}\n            {pokemon !== undefined && (\n                <Button variant='contained' onClick={() => history.push('/pokedexNat')}>Back to Pokedex</Button>\n            )}\n        </>\n    );\n};\n\nexport default Pokemon;","export default __webpack_public_path__ + \"static/media/pokedex.c389df47.jpg\";","import React from 'react';\nimport {\n    Container,\n    Grid,\n    Card,\n    Typography,\n    Button,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Image from './pokedex.jpg'\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        padding: 'auto',\n        margin: 'auto',\n        marginTop: '100px',\n        height: '446px',\n        width: '342px',\n        backgroundImage: `url(${Image})`\n    },\n    button: {\n        color: 'white',\n        background: 'red',\n        marginTop: '10px'\n    },\n    title: {\n        marginTop: '130px'\n    }\n}));\n\nconst Intro = (props) => {\n    const classes = useStyles();\n    const { history } = props;\n\n    return (\n        <Container>\n            <Card className={classes.card} raised>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Typography\n                        className={classes.title}\n                        variant='h6'\n                    >Choose a Pokedex\n                    </Typography>\n                    <Button\n                        className={classes.button}\n                        variant=\"contained\"\n                        onClick={() => history.push('/pokedexNat')}\n                    >\n                        National Pokedex\n                </Button>\n                </Grid>\n            </Card>\n        </Container>\n    )\n};\n\nexport default Intro;","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Pokedex from './components/Pokedex';\nimport Pokemon from './components/Pokemon';\nimport Intro from './components/Intro';\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/\" render={(props) => <Intro {...props} />} />\n    <Route exact path=\"/pokedexNat\" render={(props) => <Pokedex {...props} />} />\n    <Route\n      exact\n      path=\"/:pokemonId\"\n      render={(props) => <Pokemon {...props} />}\n    />\n  </Switch>\n);\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}